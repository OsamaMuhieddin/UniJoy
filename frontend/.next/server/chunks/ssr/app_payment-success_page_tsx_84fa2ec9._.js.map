{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Abdalmoute/OneDrive/Desktop/unijoy-events/frontend/app/payment-success/page.tsx"],"sourcesContent":["'use client';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst PaymentSuccessPage = () => {\r\n  const { token } = useAuth();\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const searchParams = useSearchParams();\r\n  const sessionId = searchParams.get('session_id');\r\n  const eventId = searchParams.get('eventId');\r\n\r\n  useEffect(() => {\r\n    const confirmPayment = async () => {\r\n      if (!eventId) {\r\n        toast({\r\n          title: 'Payment succeeded',\r\n          description: 'Missing payment session or event ID.',\r\n          className: 'bg-red-600 text-white border-0',\r\n        });\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/users/me/events/${eventId}/confirm`,\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ paymentIntentId: eventId }),\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error('Failed to confirm registration');\r\n        } else {\r\n          toast({\r\n            title: 'Payment successfully',\r\n            description:\r\n              data.message ||\r\n              'âœ… Your payment was successful, and you have been registered for the event!',\r\n            className: 'bg-green-500 text-white',\r\n          });\r\n          //Direction according to the role\r\n          setTimeout(() => {\r\n            router.push('/');\r\n          }, 1500);\r\n        }\r\n      } catch (error: any) {\r\n        toast({\r\n          title: 'Payment succeeded',\r\n          description:\r\n            error?.message ||\r\n            'Payment succeeded, but registration failed. Please contact support.',\r\n          className: 'bg-red-600 text-white border-0',\r\n        });\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      confirmPayment();\r\n    }\r\n  }, [sessionId, eventId,token]);\r\n\r\n  return (\r\n    <div className='min-h-screen flex items-center justify-center flex-col text-center p-4'>\r\n      <h1 className='text-3xl font-bold mb-4 text-green-600'>\r\n        Payment Successful\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSuccessPage;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AALA;;;;;;;AAOA,MAAM,qBAAqB;IACzB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD;IACxB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,YAAY,aAAa,GAAG,CAAC;IACnC,MAAM,UAAU,aAAa,GAAG,CAAC;IAEjC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI,CAAC,SAAS;gBACZ,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,WAAW;gBACb;gBACA;YACF;YACA,IAAI;gBACF,MAAM,WAAW,MAAM,MACrB,CAAC,sCAAsC,EAAE,QAAQ,QAAQ,CAAC,EAC1D;oBACE,QAAQ;oBACR,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,OAAO;wBAChC,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBAAE,iBAAiB;oBAAQ;gBAClD;gBAEF,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB,OAAO;oBACL,MAAM;wBACJ,OAAO;wBACP,aACE,KAAK,OAAO,IACZ;wBACF,WAAW;oBACb;oBACA,iCAAiC;oBACjC,WAAW;wBACT,OAAO,IAAI,CAAC;oBACd,GAAG;gBACL;YACF,EAAE,OAAO,OAAY;gBACnB,MAAM;oBACJ,OAAO;oBACP,aACE,OAAO,WACP;oBACF,WAAW;gBACb;YACF;QACF;QAEA,IAAI,OAAO;YACT;QACF;IACF,GAAG;QAAC;QAAW;QAAQ;KAAM;IAE7B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBAAyC;;;;;;;;;;;AAK7D;uCAEe","debugId":null}}]
}