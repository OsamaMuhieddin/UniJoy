{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport function middleware(request: NextRequest) {\r\n    const path = request.nextUrl.pathname;\r\n    const token = request.cookies.get('token')?.value;\r\n\r\n    // General pages that the user should not visit if they are logged in.\r\n    const publicAuthPages = [\r\n        '/auth/login',\r\n        '/auth/register',\r\n        '/auth/register/host',\r\n        '/auth/register/user',\r\n    ];\r\n\r\n    // Protected pathways by role\r\n    const protectedPaths = [\r\n        { path: '/admin', role: 'admin' },\r\n        { path: '/host', role: 'host' },\r\n        { path: '/user', role: 'user' },\r\n        { path: '/events', role: 'user' },\r\n        { path: '/profile', role: ['user','admin','host'] },\r\n    ];\r\n\r\n    // Check if the path is protected.\r\n    const protectedPath = protectedPaths.find(p => path.startsWith(p.path));\r\n\r\n    // Prevent registrants from accessing the login or registration pages.\r\n    if (publicAuthPages.some(p => path.startsWith(p))) {\r\n        if (token) {\r\n            try {\r\n                const decoded = jwt.verify(token, process.env.JWT_SECRET!) as { role?: string };\r\n\r\n                // Redirect by role\r\n                if (decoded.role === 'admin') {\r\n                    return NextResponse.redirect(new URL('/admin/dashboard', request.url));\r\n                } else if (decoded.role === 'host') {\r\n                    return NextResponse.redirect(new URL('/host/dashboard', request.url));\r\n                } else if (decoded.role === 'user') {\r\n                    return NextResponse.redirect(new URL('/user/dashboard', request.url));\r\n                }\r\n            } catch (err) {\r\n                // Invalid token, we allow him to enter.\r\n                return NextResponse.next();\r\n            }\r\n        }\r\n    }\r\n\r\n    // ðŸ”’ Protection of protected paths\r\n    if (protectedPath) {\r\n        if (!token) {\r\n            return NextResponse.redirect(new URL('/auth/login', request.url));\r\n        }\r\n\r\n        try {\r\n            const decoded = jwt.verify(token, process.env.JWT_SECRET!) as { role?: string };\r\n\r\n            if (decoded.role !== protectedPath.role) {\r\n                return NextResponse.redirect(new URL('/unauthorized', request.url));\r\n            }\r\n        } catch (err) {\r\n            return NextResponse.redirect(new URL('/auth/login', request.url));\r\n        }\r\n    }\r\n\r\n    return NextResponse.next();\r\n}"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;AAAA;AAEA;;;AAEO,SAAS,WAAW,OAAoB;IAC3C,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IACrC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAE5C,sEAAsE;IACtE,MAAM,kBAAkB;QACpB;QACA;QACA;QACA;KACH;IAED,6BAA6B;IAC7B,MAAM,iBAAiB;QACnB;YAAE,MAAM;YAAU,MAAM;QAAQ;QAChC;YAAE,MAAM;YAAS,MAAM;QAAO;QAC9B;YAAE,MAAM;YAAS,MAAM;QAAO;QAC9B;YAAE,MAAM;YAAW,MAAM;QAAO;QAChC;YAAE,MAAM;YAAY,MAAM;gBAAC;gBAAO;gBAAQ;aAAO;QAAC;KACrD;IAED,kCAAkC;IAClC,MAAM,gBAAgB,eAAe,IAAI,CAAC,CAAA,IAAK,KAAK,UAAU,CAAC,EAAE,IAAI;IAErE,sEAAsE;IACtE,IAAI,gBAAgB,IAAI,CAAC,CAAA,IAAK,KAAK,UAAU,CAAC,KAAK;QAC/C,IAAI,OAAO;YACP,IAAI;gBACA,MAAM,UAAU,6IAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;gBAExD,mBAAmB;gBACnB,IAAI,QAAQ,IAAI,KAAK,SAAS;oBAC1B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,oBAAoB,QAAQ,GAAG;gBACxE,OAAO,IAAI,QAAQ,IAAI,KAAK,QAAQ;oBAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;gBACvE,OAAO,IAAI,QAAQ,IAAI,KAAK,QAAQ;oBAChC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;gBACvE;YACJ,EAAE,OAAO,KAAK;gBACV,wCAAwC;gBACxC,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;YAC5B;QACJ;IACJ;IAEA,mCAAmC;IACnC,IAAI,eAAe;QACf,IAAI,CAAC,OAAO;YACR,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;QACnE;QAEA,IAAI;YACA,MAAM,UAAU,6IAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,UAAU;YAExD,IAAI,QAAQ,IAAI,KAAK,cAAc,IAAI,EAAE;gBACrC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;YACrE;QACJ,EAAE,OAAO,KAAK;YACV,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;QACnE;IACJ;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC5B"}}]
}