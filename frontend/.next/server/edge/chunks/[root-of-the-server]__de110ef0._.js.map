{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const path = request.nextUrl.pathname;\r\n\r\n  const publicAuthPages = [\r\n    '/auth/login',\r\n    '/auth/signup',\r\n    '/auth/signup/host',\r\n    '/auth/signup/user',\r\n  ];\r\n\r\n  const protectedPaths = [\r\n    { path: '/admin', role: 'admin' },\r\n    { path: '/host', role: 'host' },\r\n    { path: '/user', role: 'user' },\r\n    { path: '/profile', role: ['user', 'admin', 'host'] },\r\n  ];\r\n\r\n  const protectedPath = protectedPaths.find((p) => path.startsWith(p.path));\r\n\r\n  // ✅ استخدم request.cookies.get()\r\n  const token = request.cookies.get('token')?.value;\r\n  const userRole = request.cookies.get('userRole')?.value;\r\n\r\n  if (publicAuthPages.some((p) => path.startsWith(p))) {\r\n    if (token && userRole) {\r\n      if (userRole === 'admin') {\r\n        return NextResponse.redirect(new URL('/admin/dashboard', request.url));\r\n      } else if (userRole === 'host') {\r\n        return NextResponse.redirect(new URL('/host/dashboard', request.url));\r\n      } else if (userRole === 'user') {\r\n        return NextResponse.redirect(new URL('/user/dashboard', request.url));\r\n      }\r\n    }\r\n  }\r\n\r\n  if (protectedPath) {\r\n    if (!token || !userRole) {\r\n      return NextResponse.redirect(new URL('/auth/login', request.url));\r\n    }\r\n\r\n    const requiredRole = protectedPath.role;\r\n    if (Array.isArray(requiredRole)) {\r\n      if (!requiredRole.includes(userRole)) {\r\n        return NextResponse.redirect(new URL('/unauthorized', request.url));\r\n      }\r\n    } else {\r\n      if (userRole !== requiredRole) {\r\n        return NextResponse.redirect(new URL('/unauthorized', request.url));\r\n      }\r\n    }\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,MAAM,kBAAkB;QACtB;QACA;QACA;QACA;KACD;IAED,MAAM,iBAAiB;QACrB;YAAE,MAAM;YAAU,MAAM;QAAQ;QAChC;YAAE,MAAM;YAAS,MAAM;QAAO;QAC9B;YAAE,MAAM;YAAS,MAAM;QAAO;QAC9B;YAAE,MAAM;YAAY,MAAM;gBAAC;gBAAQ;gBAAS;aAAO;QAAC;KACrD;IAED,MAAM,gBAAgB,eAAe,IAAI,CAAC,CAAC,IAAM,KAAK,UAAU,CAAC,EAAE,IAAI;IAEvE,iCAAiC;IACjC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAC5C,MAAM,WAAW,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAElD,IAAI,gBAAgB,IAAI,CAAC,CAAC,IAAM,KAAK,UAAU,CAAC,KAAK;QACnD,IAAI,SAAS,UAAU;YACrB,IAAI,aAAa,SAAS;gBACxB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,oBAAoB,QAAQ,GAAG;YACtE,OAAO,IAAI,aAAa,QAAQ;gBAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;YACrE,OAAO,IAAI,aAAa,QAAQ;gBAC9B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,mBAAmB,QAAQ,GAAG;YACrE;QACF;IACF;IAEA,IAAI,eAAe;QACjB,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;QACjE;QAEA,MAAM,eAAe,cAAc,IAAI;QACvC,IAAI,MAAM,OAAO,CAAC,eAAe;YAC/B,IAAI,CAAC,aAAa,QAAQ,CAAC,WAAW;gBACpC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;YACnE;QACF,OAAO;YACL,IAAI,aAAa,cAAc;gBAC7B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,QAAQ,GAAG;YACnE;QACF;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B"}}]
}